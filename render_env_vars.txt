# Environment Variables for Render.com Deployment
# Copy these to your Render service environment variables

# =============================================================================
# REQUIRED VARIABLES (MUST be set)
# =============================================================================

# Flask Secret Key (CRITICAL - Generate a new one!)
# Generate with: python3 -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=<generate-random-32-char-string>

# Database URL (Automatically set by Render when you connect PostgreSQL database)
DATABASE_URL=<automatically-set-by-render-database>

# Admin Configuration (REQUIRED)
ADMIN_EMAIL=<your-admin-email@domain.com>
ADMIN_PASSWORD=<secure-admin-password>

# Email Configuration (REQUIRED for notifications)
MAIL_USERNAME=<your-gmail-address@gmail.com>
MAIL_PASSWORD=<your-gmail-app-password>
MAIL_DEFAULT_SENDER=<your-gmail-address@gmail.com>

# =============================================================================
# OPTIONAL VARIABLES (have sensible defaults)
# =============================================================================

# Application Environment
FLASK_ENV=production
PYTHON_VERSION=3.11.9

# Security Settings
WTF_CSRF_ENABLED=1
WTF_CSRF_TIME_LIMIT=3600
SESSION_COOKIE_SECURE=1
SESSION_COOKIE_HTTPONLY=1
SESSION_LIFETIME=86400

# Performance Settings
LOG_LEVEL=INFO
WORKERS=4
WORKER_CLASS=gevent
WORKER_CONNECTIONS=1000
COMPRESS_LEVEL=6
COMPRESS_MIN_SIZE=500

# File Upload Settings
MAX_UPLOAD_MB=16

# Backup Settings
BACKUP_ENABLED=1

# Email Server Settings (Gmail defaults)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=1

# =============================================================================
# STEP-BY-STEP SETUP INSTRUCTIONS
# =============================================================================

# 1. GENERATE SECRET_KEY:
#    Run this command and copy the output:
#    python3 -c "import secrets; print(secrets.token_hex(32))"

# 2. SET UP GMAIL APP PASSWORD:
#    a) Enable 2-Factor Authentication on your Gmail account
#    b) Go to Google Account settings > Security > App passwords
#    c) Generate an app password for "Mail"
#    d) Use this app password (not your regular Gmail password)

# 3. CHOOSE ADMIN CREDENTIALS:
#    - Use a strong password for ADMIN_PASSWORD
#    - Use a real email address for ADMIN_EMAIL

# =============================================================================
# RENDER.COM DEPLOYMENT STEPS
# =============================================================================

# STEP 1: Create PostgreSQL Database
# - Go to Render dashboard
# - Click "New +" > "PostgreSQL"
# - Name: ctf-database
# - Plan: Free (or Starter for production)
# - Region: Oregon
# - Click "Create Database"

# STEP 2: Create Web Service
# - Click "New +" > "Web Service"
# - Connect your GitHub repository
# - Name: ctf-game
# - Runtime: Python 3
# - Build Command: pip install -r requirements.txt && python database_setup.py
# - Start Command: gunicorn --bind 0.0.0.0:$PORT --workers 4 --worker-class gevent wsgi:application
# - Plan: Free (or Starter for production)

# STEP 3: Set Environment Variables
# - In web service settings, go to "Environment"
# - Add each variable from this file
# - For DATABASE_URL: Select your PostgreSQL database from dropdown

# STEP 4: Deploy
# - Click "Create Web Service"
# - Wait for deployment to complete
# - Your app will be available at: https://your-service-name.onrender.com

# =============================================================================
# PRODUCTION RECOMMENDATIONS
# =============================================================================

# For Production Use:
# - Upgrade to Starter plan ($7/month) for always-on service
# - Use Starter PostgreSQL plan for better performance
# - Set up custom domain in service settings
# - Enable automatic deploys from main branch
# - Set up monitoring and alerts

# Security Best Practices:
# - Use strong, unique passwords
# - Regularly rotate SECRET_KEY and passwords
# - Monitor application logs for security events
# - Keep dependencies updated

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# 1. Build fails: Check requirements.txt and Python version
# 2. Database connection fails: Verify DATABASE_URL is set correctly
# 3. Email not working: Check Gmail app password and 2FA settings
# 4. App crashes: Check application logs in Render dashboard

# Testing Locally:
# - Set environment variables in .env file
# - Run: python app.py
# - Test at: http://localhost:10000

# =============================================================================
# EXAMPLE VALUES (DO NOT USE IN PRODUCTION)
# =============================================================================

# SECRET_KEY=a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456
# ADMIN_EMAIL=admin@myctf.com
# ADMIN_PASSWORD=SecurePassword123!
# MAIL_USERNAME=myctf@gmail.com
# MAIL_PASSWORD=abcd efgh ijkl mnop
# MAIL_DEFAULT_SENDER=myctf@gmail.com

# =============================================================================
# SUPPORT
# =============================================================================

# Render Documentation: https://render.com/docs
# Flask Documentation: https://flask.palletsprojects.com/
# Gmail App Passwords: https://support.google.com/accounts/answer/185833

# Need Help?
# - Check Render build and application logs
# - Verify all environment variables are set
# - Test application locally first
# - Ensure database is connected and accessible
